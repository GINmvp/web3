1什么是 Web3.js 和 Web3.py?
    Web3.js是一个用于和以太坊网络交互的js库
    Web3.py是一个用于和以太坊网络交互的python库

    这些库允许开发者在链下调用、部署链上的智能合约，也可以与链上的账户进行交易

2如何使用 Web3.js 调用已部署的 Solidity 合约的函数？


3在调用智能合约的 set 函数时需要哪些参数？

4为什么需要 ABI 来与智能合约进行交互？
    ABI 定义了智能合约的方法和事件，使得外部应用程序知道如何调用合约中的方法。
    链下的DApps就可以根据 ABI 来调用智能合约的函数，而不需要了解智能合约的实现细节。

5如何使用 solc 和 ethabi 工具编译 Solidity 合约并生成 ABI 文件？
    solc --abi --bin --optimize -o out/ contract.sol
    
6如何安装 ethabi 工具并生成 Python 代码？

7调用合约的 get 函数有什么特殊要求吗？

8使用第三方工具将 Solidity 合约转换为其他语言代码有哪些潜在问题？
    兼容性问题：不同语言之间可能存在语法和语义差异，导致转换后的代码无法完全保留原合约的功能和逻辑。
    安全性风险：转换过程中可能会引入新的安全漏洞，尤其是在处理复杂的逻辑和数据结构时。
    依赖问题：某些 Solidity 特定的库或功能可能在目标语言中没有直接对应的实现，需要额外的适配或替代方案。

9手动实现合约功能有哪些挑战？

10在项目中如何确保与智能合约交互的安全性？
    使用经过安全审计的三方库比如openzeppelin
    对自己的代码进行测试与审计，确保没有严重的安全漏洞
    处理链上异常情况，例如交易失败或gas不足
    调用三方合约严格控制 Gas 限制，防止攻击者消耗过多gas。
